# Build and deploy Goal Kit documentation to GitHub Pages
name: Deploy Documentation to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
    paths:
      - '*.md'
      - 'docs/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for git info

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs mkdocs-material

      - name: Create mkdocs.yml
        run: |
          cat > mkdocs.yml << 'EOF'
          site_name: Goal Kit Documentation
          site_description: Goal-Driven Development Toolkit
          site_author: Nom-nom-hub

          theme:
            name: material
            palette:
              primary: green
              accent: green

          nav:
            - Home: index.md
            - Goal-Driven Development: goal-driven.md
            - Comparison: comparison.md
            - Examples: examples.md
            - README: README.md

          markdown_extensions:
            - admonition
            - codehilite
            - toc:
                permalink: true
          EOF

      - name: Create index.md
        run: |
          cat > index.md << 'EOF'
          # Goal Kit Documentation

          Welcome to the Goal Kit documentation. Goal Kit implements Goal-Driven Development, a methodology that focuses on outcomes and learning rather than detailed upfront specifications.

          ## Quick Start

          1. **Set Vision**: Establish your project vision and principles
          2. **Define Goals**: Create measurable goals with success criteria
          3. **Explore Strategies**: Consider multiple approaches for each goal
          4. **Plan Milestones**: Break goals into measurable progress steps
          5. **Execute & Learn**: Implement with continuous adaptation

          ## Key Commands

          - `/goalkit.vision` - Establish project vision
          - `/goalkit.goal` - Define goals and success criteria
          - `/goalkit.strategies` - Explore implementation strategies
          - `/goalkit.milestones` - Create measurable milestones
          - `/goalkit.execute` - Execute with learning and adaptation

          ## Philosophy

          Goal-Driven Development emphasizes:

          - **Outcome-First**: Prioritize user and business outcomes
          - **Strategy Flexibility**: Multiple valid approaches for any goal
          - **Measurement-Driven**: Progress must be measured and validated
          - **Learning Integration**: Treat implementation as hypothesis testing
          - **Adaptive Planning**: Change course based on evidence

          ## Supported AI Agents

          Goal Kit works with all major AI coding assistants:
          - Claude Code, GitHub Copilot, Gemini CLI, Cursor, Qwen Code, opencode, Codex CLI, Windsurf, Kilo Code, Auggie CLI, Roo Code, Amazon Q Developer CLI

          [Get Started](README.md) | [Learn More](goal-driven.md) | [See Examples](examples.md) | [Compare Approaches](comparison.md)
          EOF

      - name: Build with MkDocs
        run: mkdocs build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'site'

  # Deploy job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4